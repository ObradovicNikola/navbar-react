{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Default.js","components/Menu.js","components/Contact.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","navClicked","navCleaned","setState","unhover","setTimeout","toggleMenu","mobileMenuShow","state","closeMenu","nextProps","nextState","this","menu","id","className","style","to","onClick","src","process","width","height","alt","exact","activeClassName","Component","Home","Default","Menu","Contact","About","App","Fragment","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6f4599e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './componentsStyles/Navbar.css'\nimport { NavLink } from 'react-router-dom'\n// for performance boost and convenience\n// extends PureComponent instead shouldComponentUpdate\nexport default class Navbar extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            mobileMenuShow: false,\n            unhover: '',\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.mobileMenuShow !== nextState.mobileMenuShow) {\n            return true;\n        }\n        return false;\n    }\n\n    navClicked = (navCleaned) => {\n        this.setState({\n            unhover: 'no-hover'\n        })\n        setTimeout(navCleaned, 40);\n    }\n\n    navCleaned = () => {\n        this.setState({\n            unhover: ''\n        })\n    }\n\n    toggleMenu = () => {\n        this.setState({ mobileMenuShow: !this.state.mobileMenuShow })\n    }\n\n    closeMenu = () => {\n        setTimeout(this.navClicked(this.navCleaned), 300)\n        this.setState({ mobileMenuShow: false })\n    }\n\n    render() {\n        let menu;\n        if (this.state.mobileMenuShow)\n            menu = \"menu menu-mobile animated fadeInDown\"\n        else menu = \"menu\"\n        return (\n            <nav id=\"navigation\">\n                <div className=\"logo-container\" style={{}}>\n                    <div className=\"logo\" id=\"logo\">\n                        <NavLink to=\"/react-navbar-hover\" className=\"nav-link\" onClick={this.closeMenu}>\n                            <img src={`${process.env.PUBLIC_URL}/images/phoenixLogo.png`} width=\"50\" height=\"43\" alt=\"logo\" />\n                            <p>Restaurant Phoenix</p>\n                        </NavLink>\n                    </div>\n                    <div className=\"burger\" onClick={this.toggleMenu}>\n                        <i className=\"fas fa-bars\"></i>\n                    </div>\n                </div>\n                <div className=\"menu-container\">\n                    <ul className={menu}>\n                        <li className={this.state.unhover}>\n                            <div className=\"nav-dropdown\">HOME <i className=\"fas fa-caret-down\"></i></div>\n                            <div className=\"sub-menu-container\">\n                                <ul>\n                                    <li>\n                                        <NavLink to=\"/react-navbar-hover\" exact={true} className=\"nav-link\" activeClassName='is-active' onClick={this.closeMenu}>HOME 1</NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink to=\"/react-navbar-hover\" exact={true} className=\"nav-link\" activeClassName='is-active' onClick={this.closeMenu}>HOME 2</NavLink>\n                                    </li>\n                                </ul>\n                            </div>\n                        </li>\n                        <li className={this.state.unhover}>\n                            <div className=\"nav-dropdown\">MENU <i className=\"fas fa-caret-down\"></i></div>\n                            <div className=\"sub-menu-container\">\n                                <ul>\n                                    <li>\n                                        <NavLink to=\"/react-navbar-hover/menu\" activeClassName='is-active' className=\"nav-link\" onClick={this.closeMenu}>MENU 1</NavLink>\n                                    </li>\n                                    <li >\n                                        <NavLink to=\"/react-navbar-hover/menu\" activeClassName='is-active' className=\"nav-link\" onClick={this.closeMenu}>MENU 2</NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink to=\"/react-navbar-hover/menu\" activeClassName='is-active' className=\"nav-link\" onClick={this.closeMenu}>MENU 3</NavLink>\n                                    </li>\n                                </ul>\n                            </div>\n                        </li>\n                        <li>\n                            <NavLink to=\"/react-navbar-hover/contact\" className=\"nav-link\" activeClassName='is-active' onClick={this.closeMenu}>CONTACT</NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/react-navbar-hover/about\" className=\"nav-link\" activeClassName='is-active' onClick={this.closeMenu}>ABOUT</NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </nav >\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                This is Home page\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default function Default() {\n    return (\n        <div>\n            Error 404! Page not found.\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Menu() {\n    return (\n        <div>\n            Hello from menu\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Contact() {\n    return (\n        <div>\n            hello from contact page\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            Hello from about page\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Default from './components/Default'\nimport Menu from './components/Menu'\nimport Contact from './components/Contact'\nimport About from './components/About'\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/react-navbar-hover\" component={Home}></Route>\n          <Route path=\"/react-navbar-hover/menu\" component={Menu}></Route>\n          <Route path=\"/react-navbar-hover/contact\" component={Contact}></Route>\n          <Route path=\"/react-navbar-hover/about\" component={About}></Route>\n          <Route component={Default}></Route>\n        </Switch>\n      </BrowserRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}